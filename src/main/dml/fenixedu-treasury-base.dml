package org.fenixedu.treasury.domain;

enum org.fenixedu.treasury.domain.document.FinantialDocumentTypeEnum                                as FinantialDocumentTypeEnum;
enum org.fenixedu.treasury.domain.document.FinantialEntryType                                       as FinantialEntryType;
enum org.fenixedu.treasury.domain.document.FinantialDocumentStateType                               as FinantialDocumentStateType;
enum org.fenixedu.treasury.domain.tariff.DueDateCalculationType                                     as DueDateCalculationType;
enum org.fenixedu.treasury.domain.tariff.InterestType                                               as InterestType; 
enum org.fenixedu.treasury.domain.paymentcodes.PaymentReferenceCodeStateType						as PaymentReferenceCodeStateType;
enum org.fenixedu.treasury.domain.forwardpayments.ForwardPaymentStateType                           as ForwardPaymentStateType;
enum org.fenixedu.treasury.domain.sibsonlinepaymentsgateway.SibsOnlinePaymentsGatewayEnviromentMode	as SibsOnlinePaymentsGatewayEnviromentMode;
enum org.fenixedu.treasury.domain.paymentPlan.PaymentPlanStateType 									as PaymentPlanStateType;

external class .org.fenixedu.bennu.io.domain.GenericFile;

valueType java.math.BigDecimal as BigDecimalT
{
	externalizeWith {
		String toString();
	}
} 

valueType pt.ist.standards.geographic.Municipality as Municipality {
    externalizeWith {
        String pt.ist.standards.geographic.TreasuryGeographicInfoLoader.externalizePlace();
    }

    internalizeWith pt.ist.standards.geographic.TreasuryGeographicInfoLoader.internalizePlace();
}

valueType pt.ist.standards.geographic.District as District {
    externalizeWith {
        String pt.ist.standards.geographic.TreasuryGeographicInfoLoader.externalizePlace();
    }

    internalizeWith pt.ist.standards.geographic.TreasuryGeographicInfoLoader.internalizePlace();
}

valueType pt.ist.standards.geographic.Country as Country {
    externalizeWith {
        String pt.ist.standards.geographic.TreasuryGeographicInfoLoader.externalizePlace();
    }

    internalizeWith pt.ist.standards.geographic.TreasuryGeographicInfoLoader.internalizePlace();
}

/************
 * ENTITIES *
 ************/

/*-------------------
 * REFERENCE ENTITIES
 * ------------------*/

class FiscalCountryRegion {
	String fiscalCode;
	LocalizedString name;
}

class CustomerType {
	String code (REQUIRED);
	LocalizedString name (REQUIRED);
}

class VatType {
	String code;
	LocalizedString name;
}

class Vat {
	BigDecimalT taxRate;
	DateTime beginDate;
	DateTime endDate;
}

class VatExemptionReason
{
	String code;
	LocalizedString name;
}

class ProductGroup {
	String code;
	LocalizedString name;
}

class Product {
	String code;
	LocalizedString name;
	LocalizedString unitOfMeasure;
	boolean active;
	boolean legacy;
	int tuitionInstallmentOrder;
}

class Currency {
	String code;
	LocalizedString name;
	String isoCode;
	String symbol;
}

class PaymentMethod {
	String code;
	LocalizedString name;
	boolean availableForPaymentInApplication;
}

class integration.Configuration
{
    boolean active;
       String code;
       String externalURL;
       String username;
       String password;
}

class TreasuryOperationLog {
    String log;
    String domainOid;
    String type;
}

/*-----------
 * Finantial 
 * ----------*/
 
class FinantialInstitution {
	String code (REQUIRED);
	String fiscalNumber (REQUIRED);
	String companyId;
	String name (REQUIRED);
	String companyName;
	String address;
	Country country;
	District district;
	Municipality municipality;
	String email;
	String telephoneContact;
	String webAddress; 
	String locality;
	String zipCode;
}

class FinantialEntity {
	String code (REQUIRED);
	LocalizedString name (REQUIRED);
} 


class Customer {
	String erpCustomerId;
	String address;
	String region;
	String districtSubdivision;
	String zipCode;
	String addressCountryCode;
}

	class FiscalDataUpdateLog {
		DateTime whenUpdated;
		String responsibleUsername;
		String oldFiscalCountry;
		String oldFiscalNumber;
		String updatedFiscalCountry;
		String updatedFiscalNumber;
		boolean changeFiscalNumberConfirmed;
		boolean withFinantialDocumentsIntegratedInERP;
		boolean customerInformationMaybeIntegratedWithSuccess;
		boolean customerWithFinantialDocumentsIntegratedInPreviousERP;
		
	}
	
		relation FiscalDataUpdateLogBennu {
			.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
				multiplicity 1..1;
			}
		
			FiscalDataUpdateLog playsRole fiscalDataUpdateLogs {
				multiplicity *;
			}
		}
		
		relation FiscalDataUpdateLogCustomer {
			Customer playsRole customer {
				multiplicity 1..1;
			}
			
			FiscalDataUpdateLog playsRole fiscalDataUpdateLogs {
				multiplicity *;
			}
		}
		
class AdhocCustomer extends Customer {
	String code;
	String fiscalNumber;
	String identificationNumber;
	String name;
}


class debt.DebtAccount {
	boolean closed;
	String legacyCode;
}

class document.TreasuryDocumentTemplate {
}

class document.TreasuryDocumentTemplateFile /* implements IGenericFile */ {
	String fileId;
	boolean active;
	DateTime creationDate;
	String creator;
}
	
	relation TreasuryDocumentTemplateFileDomainRoot {
	    
	    .pt.ist.fenixframework.DomainRoot playsRole domainRoot {
	        multiplicity 1..1;
	    }
	    
	    document.TreasuryDocumentTemplateFile playsRole treasuryDocumentTemplateFiles {
	        multiplicity *;
	    }
	    
	}
	
	relation TreasuryDocumentTemplateFileDocumentTemplate {
	    
	    document.TreasuryDocumentTemplate playsRole treasuryDocumentTemplate {
	        multiplicity 1..1;
	    }
	    
	    document.TreasuryDocumentTemplateFile playsRole treasuryDocumentTemplateFiles {
	        multiplicity *;
	    }
	}


/*-----------
 * Documents 
 * ----------*/

class document.FinantialDocumentType {
	FinantialDocumentTypeEnum type;
	String code;
	LocalizedString name;
	String documentNumberSeriesPrefix;
	boolean invoice;
	
}

class document.Series {
	String code (REQUIRED);
	LocalizedString name (REQUIRED);
	boolean active;
	boolean externSeries;
	boolean certificated;
	boolean legacy;
	boolean defaultSeries;
	boolean selectable;
}

	relation FinantialInstitutionRegulationSeries {
		FinantialInstitution playsRole finantialInstitutionForRegulationSeries {
			multiplicity 0..1;
		}
		
		document.Series playsRole regulationSeries {
			multiplicity 0..1;
		}
	}

class document.DocumentNumberSeries {
	int counter;
	boolean replacePrefix;
	String replacingPrefix;
}

class event.TreasuryEvent {
	LocalizedString description;
	String propertiesJsonMap;
}

class document.FinantialDocument {
	String documentNumber;
	DateTime documentDate;
	LocalDate documentDueDate;
	String originDocumentNumber;
	FinantialDocumentStateType state;
	String address;
	String annulledReason;
	String documentObservations;
	String clearDocumentToExportReason;
	DateTime clearDocumentToExportDate;
	DateTime closeDate;
	boolean exportedInLegacyERP;
	String legacyERPCertificateDocumentReference;
	LocalDate erpCertificationDate;
	String erpCertificateDocumentReference;
	String propertiesJsonMap;
}

	class document.Invoice extends document.FinantialDocument {
	}

		class document.DebitNote extends document.Invoice {
		}
		
		class document.CreditNote extends document.Invoice {
			String reason;
		}
		
		class document.AdvancedPaymentCreditNote extends document.CreditNote{
		}
	
	class document.SettlementNote extends document.FinantialDocument {
	   DateTime paymentDate;
	   boolean advancePaymentSetByUser;
	   String finantialTransactionReference;
	   boolean usedInBalanceTransfer;
	}

class document.FinantialDocumentEntry {
	FinantialEntryType finantialEntryType;
	String description;
	BigDecimalT amount;
	DateTime entryDateTime;
	Integer entryOrder;
	String propertiesJsonMap;
}

	class document.InvoiceEntry extends document.FinantialDocumentEntry {
		BigDecimalT quantity;
		BigDecimalT vatAmount;
		BigDecimalT vatRate;
		BigDecimalT netAmount;
		BigDecimalT amountWithVat;
	}

	class document.DebitEntry extends document.InvoiceEntry {
			boolean eventAnnuled;
			LocalDate dueDate;
			BigDecimalT exemptedAmount;
	
			// This property has academic significance but  
			// is meaningless in treasury scope			
			boolean academicalActBlockingSuspension;
			
			// This property blocks academic acts
			// if not payed
			boolean blockAcademicActsOnDebt;
	}
		
	class document.CreditEntry extends document.InvoiceEntry {
		boolean fromExemption;
	}

	class document.SettlementEntry extends document.FinantialDocumentEntry {
		DateTime closeDate;
	}

class document.PaymentEntry {
	BigDecimalT payedAmount;
	String paymentMethodId;
	String propertiesJsonMap;
}

class document.ReimbursementEntry {
	BigDecimalT reimbursedAmount;
	String reimbursementMethodId;
}


/*
class debt.DebitEntrySuspensionRequest {
}

class debt.DebitEntrySuspensionRequestEntry {
}
*/

/*************
* ACCESS CONTROL
****************/
//
//public class accesscontrol.academicAdministration.TreasuryAccessRule {
//    protected DateTime created (REQUIRED);
//    protected DateTime revoked;
//    protected TreasuryAccessOperation operation (REQUIRED);
//}
//class accesscontrol.PersistentTreasuryOperationGroup extends .org.fenixedu.bennu.core.domain.groups.PersistentGroup {
//    public TreasuryOperationType operation;
//    public TreasuryOperationTypeScope scope;
//}
//
//
//relation TreasuryAuthorizationGroupFinantialInstitution {
//    public accesscontrol.PersistentTreasuryOperationGroup playsRole treasuryAuthorizationGroup {
//        multiplicity *;
//    }
//    public FinantialInstitution playsRole finantialInstitution {
//        multiplicity *;
//    }
//}
//
//relation TreasuryAuthorizationGroupFinantialEntity {
//    public accesscontrol.PersistentTreasuryOperationGroup playsRole treasuryAuthorizationGroup {
//        multiplicity *;
//    }
//    public FinantialEntity playsRole finantialEntity {
//        multiplicity *;
//    }
//}



/*-----------
 * Exemptions 
 * ----------*/


class exemption.TreasuryExemptionType {
	String code;
	LocalizedString name;
	BigDecimalT defaultExemptionPercentage;
	boolean active;
}

relation TreasuryExemptionTypeBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	exemption.TreasuryExemptionType playsRole treasuryExemptionTypes {
		multiplicity *;
	}
}

class exemption.TreasuryExemption {
	String reason;
	boolean exemptByPercentage;
	BigDecimalT valueToExempt;
}

	relation TreasuryExemptionBennu {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
		
		exemption.TreasuryExemption playsRole treasuryExemptions {
			multiplicity *;
		}
	}
	
	relation TreasuryExemptionTypeTreasuryExemption {
		exemption.TreasuryExemptionType playsRole treasuryExemptionType {
			multiplicity 1..1;
		}
		
		exemption.TreasuryExemption playsRole treasuryExemptions {
			multiplicity *;
		}
	}
	
	relation TreasuryExemptionTreasuryEvent {
		event.TreasuryEvent playsRole treasuryEvent {
			multiplicity 1..1;
		}
		
		exemption.TreasuryExemption playsRole treasuryExemptions {
			multiplicity *;
		}
	}
	
	relation TreasuryExemptionProduct {
		
	    Product playsRole product {
	        multiplicity 0..1;
	    }
	
		exemption.TreasuryExemption playsRole treasuryExemption {
			multiplicity *;
		}
	}
	
	relation TreasuryExemptionDebitEntry
	{
		document.DebitEntry playsRole debitEntry {
			multiplicity 0..1;
		}
		
		exemption.TreasuryExemption playsRole treasuryExemption {
			multiplicity 0..1;
		}
	}
	
/*-----------
 * Tariff 
 * ----------*/

class tariff.Tariff {
	DateTime beginDate;
	DateTime endDate;
	DueDateCalculationType dueDateCalculationType;
	LocalDate fixedDueDate;
	int numberOfDaysAfterCreationForDueDate;
	boolean applyInterests;
}

	class tariff.FixedTariff extends tariff.Tariff {
		BigDecimalT amount;
	}
	
class tariff.InterestRate {
	InterestType interestType;
	int numberOfDaysAfterDueDate;
	boolean applyInFirstWorkday;
	int maximumDaysToApplyPenalty;
	BigDecimalT interestFixedAmount;
	BigDecimalT rate;
}

class tariff.GlobalInterestRate {
    int year;
    LocalDate firstDay;
    LocalizedString description;
    BigDecimalT rate;
    boolean applyPaymentMonth;
    boolean applyInFirstWorkday;
}

/* -------------------------
 * Digital Payment Platforms
 * -------------------------
 */

class payments.integration.DigitalPaymentPlatform {
	String name;
	boolean active;
	String migrationCode;
}

	relation DigitalPaymentPlatformDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		payments.integration.DigitalPaymentPlatform playsRole digitalPaymentPlatforms {
			multiplicity *;
		}
	}
	
	relation DigitalPaymentPlatformFinantialInstitution {
		FinantialInstitution playsRole finantialInstitution {
			multiplicity 1..1;
		}
	
		payments.integration.DigitalPaymentPlatform playsRole digitalPaymentPlatforms {
			multiplicity *;
		}
	}

class payments.integration.DigitalPaymentPlatformPaymentMode {
	boolean active;
	String logosSmallImageFileId;
	String logosBigImageFileId;
}

	relation DigitalPaymentPlatformPaymentModeDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		payments.integration.DigitalPaymentPlatformPaymentMode playsRole digitalPaymentPlatformPaymentModes {
			multiplicity *;
		}
	}
	
	relation DigitalPaymentPlatformPaymentModes {
		payments.integration.DigitalPaymentPlatform playsRole digitalPaymentPlatform {
			multiplicity 1..1;
		}		

		payments.integration.DigitalPaymentPlatformPaymentMode playsRole digitalPaymentPlatformPaymentModes {
			multiplicity *;
		}
	}
	
	relation DigitalPaymentPlatformPaymentModePaymentMethod {
		PaymentMethod playsRole paymentMethod {
			multiplicity 1..1;
		}

		payments.integration.DigitalPaymentPlatformPaymentMode playsRole digitalPaymentPlatformPaymentModes {
			multiplicity *;
		}
	}

class payments.PaymentRequest {
	DateTime requestDate;
	String responsibleUsername;	
	BigDecimalT payableAmount;
	String sibsGatewayTransactionId;
	String sibsGatewayMerchantTransactionId;
	String migrationCode;
}

	relation PaymentRequestDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		payments.PaymentRequest playsRole paymentRequests {
			multiplicity *;
		}
	}

	relation DigitalPaymentPlatformPaymentRequest {
		payments.integration.DigitalPaymentPlatform playsRole digitalPaymentPlatform {
			multiplicity 1..1;
		}		
	
		payments.PaymentRequest playsRole paymentRequests {
			multiplicity *;
		}
	}
	
	relation PaymentRequestPaymentMethod {
		PaymentMethod playsRole paymentMethod {
			multiplicity 1..1;
		}

		payments.PaymentRequest playsRole paymentRequests {
			multiplicity *;
		}
	}
	
	relation PaymentRequestDebtAccount {
		debt.DebtAccount playsRole debtAccount {
			multiplicity 1..1;
		}
				
		payments.PaymentRequest playsRole paymentRequests {
			multiplicity *;
		}
	}
	
	relation PaymentRequestDebitEntries {
		payments.PaymentRequest playsRole paymentRequests {
			multiplicity *;
		}
		
		document.DebitEntry playsRole debitEntries {
			multiplicity *;
		}		
	}
	
class payments.PaymentTransaction {
	DateTime creationDate;
	String responsibleUsername;
	String transactionId;
	DateTime paymentDate;
	BigDecimalT paidAmount;
	String justification;
	String migrationCode;
}

	relation PaymentTransactionDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		payments.PaymentTransaction playsRole paymentTransactions {
			multiplicity *;
		}
	}
	
	relation PaymentRequestPaymentTransaction {
		payments.PaymentRequest playsRole paymentRequest {
			multiplicity 1..1;
		}
		
		payments.PaymentTransaction playsRole paymentTransactions {
			multiplicity *;
		}
	}
	
	relation PaymentTransactionSettlementNote {
		payments.PaymentTransaction playsRole paymentTransaction {
			multiplicity 0..1;
		}

		document.SettlementNote playsRole settlementNotes {
			multiplicity *;
		}
	}

class payments.PaymentRequestLog {
	DateTime creationDate;
	String responsibleUsername;	
	String stateCode;
	LocalizedString stateDescription;
	String operationCode;
	String statusCode;
	String statusMessage;
	boolean operationSuccess;
	boolean transactionWithPayment;
	boolean exceptionOccured;
	String authorizationId;
	DateTime authorizationDate;
	String migrationCode;
}
	
	relation PaymentRequestLogDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		payments.PaymentRequestLog playsRole paymentRequestLogs {
			multiplicity *;
		}
	}
	
	relation PaymentRequestPaymentRequestLog {
		payments.PaymentRequest playsRole paymentRequest {
			multiplicity 0..1;
		}
		
		payments.PaymentRequestLog playsRole paymentRequestLogs {
			multiplicity *;
		}
	}
	
	relation PaymentTransactionPaymentRequestLog {
		payments.PaymentTransaction playsRole paymentTransaction {
			multiplicity 0..1;
		}
		
		payments.PaymentRequestLog playsRole paymentRequestLog {
			multiplicity 0..1;
		}
	}
	
class payments.PaymentRequestLogFile /* implements IGenericFile */  {
	String fileId;
	DateTime creationDate;
	String creator;
}
	
	relation integration.PaymentRequestLogFileDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		payments.PaymentRequestLogFile playsRole paymentRequestLogFiles {
			multiplicity *;
		}
	}
	
	relation PaymentRequestLogInputLogFile {
		payments.PaymentRequestLog playsRole paymentRequestLogForRequest {
			multiplicity 0..1;
		}	
	
		payments.PaymentRequestLogFile playsRole requestLogFile {
			multiplicity 0..1;
		}
	}
	
	relation PaymentRequestLogOutputLogFile {
		payments.PaymentRequestLog playsRole paymentRequestLogForResponse {
			multiplicity 0..1;
		}	
	
		payments.PaymentRequestLogFile playsRole responseLogFile {
			multiplicity 0..1;
		}
	}
	
	relation PaymentRequestLogExceptionLogFile {
		payments.PaymentRequestLog playsRole paymentRequestLogForException {
			multiplicity 0..1;
		}	
	
		payments.PaymentRequestLogFile playsRole exceptionLogFile {
			multiplicity 0..1;
		}
	}
	
/* 
 * ----
 * SIBS
 * ----
 */

class paymentcodes.SibsConfiguration extends integration.Configuration {
    //No fields for now...
    String entityReferenceCode;
    String sourceInstitutionId;
    String destinationInstitutionId;
    String sibsPaymentsBrokerUrl;
    String sibsPaymentsBrokerSharedKey;
}

 relation SibsConfigurationFinantialInstitution {
       FinantialInstitution playsRole finantialInstitution {
           multiplicity 1..1;
       }
       
       paymentcodes.SibsConfiguration playsRole sibsConfiguration {
           multiplicity 0..1;
       }
    }

class paymentcodes.SibsPaymentRequest extends payments.PaymentRequest {
       String referenceCode;
       PaymentReferenceCodeStateType state;
}

class paymentcodes.SibsReferenceCode {
       String referenceCode;
       LocalDate validFrom;
       LocalDate validTo;
       BigDecimalT maxAmount;
       BigDecimalT minAmount;
       String migrationCode;
}

	relation SibsReferenceCodeDomainRoot {
	    .pt.ist.fenixframework.DomainRoot playsRole domainRoot {
	        multiplicity 1..1;
	    }
		
		paymentcodes.SibsReferenceCode playsRole sibsReferenceCodes {
			multiplicity *;
		}
	}
	
	relation SibsPaymentRequestSibsReferenceCode {
		paymentcodes.SibsPaymentRequest playsRole sibsPaymentRequest {
			multiplicity 0..1;
		}
		
		paymentcodes.SibsReferenceCode playsRole sibsReferenceCode {
			multiplicity 0..1;
		}
	}
	
	relation DigitalPaymentPlatformSibsReferenceCode {
		payments.integration.DigitalPaymentPlatform playsRole digitalPaymentPlatform {
			multiplicity 1..1;
		}
		
		paymentcodes.SibsReferenceCode playsRole sibsReferenceCodes {
			multiplicity *;
		}
	}

// Deprecated
class paymentcodes.PaymentReferenceCode {
       String referenceCode;
       LocalDate beginDate;
       LocalDate endDate;
       PaymentReferenceCodeStateType state;
       BigDecimalT maxAmount;
       BigDecimalT minAmount;
       BigDecimalT payableAmount;
       String sibsMerchantTransactionId;
       String sibsReferenceId;
}

class paymentcodes.integration.SibsPaymentCodePool extends payments.integration.DigitalPaymentPlatform {
	String entityReferenceCode;
	long minReferenceCode;
	long maxReferenceCode;
	BigDecimalT minAmount;
	BigDecimalT maxAmount;
	LocalDate validFrom;
	LocalDate validTo;
	boolean useCheckDigit;
	long nextReferenceCode;
	boolean generateReferenceCodeOnDemand;
    String sourceInstitutionId;
    String destinationInstitutionId;
}

// Deprecated
class paymentcodes.pool.PaymentCodePool {
	String name;
	String entityReferenceCode;
	Long minReferenceCode;
	Long maxReferenceCode;
	BigDecimalT minAmount;
	BigDecimalT maxAmount;
	LocalDate validFrom;
	LocalDate validTo;
	Boolean active;
	Boolean useCheckDigit;
	boolean generateReferenceCodeOnDemand;
	Long nextReferenceCode;
	boolean invalidateAnnuledCodesInSibsOutputFiles;
}
	
    relation PaymentCodePoolPaymentMethod {
       PaymentMethod playsRole paymentMethod {
           multiplicity 1..1;
       }
       
       paymentcodes.pool.PaymentCodePool playsRole paymentCodePoolPaymentMethod {
           multiplicity *;
       }
    }
	
	relation PaymentCodePoolDocumentNumberSeries {
	   document.DocumentNumberSeries playsRole documentSeriesForPayments {
	       multiplicity 1..1;
	   }
	   
	   paymentcodes.pool.PaymentCodePool playsRole paymentCodePoolPaymentSeries {
	       multiplicity *;
	   }
	}
	
	relation PaymentCodePoolFinantialInstitution {
		FinantialInstitution playsRole finantialInstitution {
			multiplicity 1..1;
		}
	
		paymentcodes.pool.PaymentCodePool playsRole paymentCodePools{
			multiplicity *;
		}
	}
	
	relation PaymentReferenceCodePaymentCodePool {
		paymentcodes.pool.PaymentCodePool playsRole paymentCodePool {
			multiplicity 1..1;
		}
	
		paymentcodes.PaymentReferenceCode playsRole paymentReferenceCodes{
			multiplicity *;
		}
	}
	
	class paymentcodes.PaymentCodeTarget {
	   Boolean valid;
    }

    class paymentcodes.MultipleEntriesPaymentCode extends paymentcodes.PaymentCodeTarget {
    }

    class paymentcodes.FinantialDocumentPaymentCode extends paymentcodes.PaymentCodeTarget {
    }
    
    relation PaymentReferenceCodeTargetPaymentCode {
        paymentcodes.PaymentCodeTarget playsRole targetPayment {
            multiplicity 0..1;
        }
    
        paymentcodes.PaymentReferenceCode playsRole paymentReferenceCode{
            multiplicity 1..1;
        }
    }
    
    relation PaymentCodeTargetBennu {
        paymentcodes.PaymentCodeTarget playsRole targetPayment {
            multiplicity *;
        }
    
	    .pt.ist.fenixframework.DomainRoot playsRole domainRoot {
	        multiplicity 1..1;
	    }
    }

    relation FinantialDocumentPaymentCodeFinantialDocument {
        document.FinantialDocument playsRole finantialDocument {
            multiplicity 1..1;
        }
    
        paymentcodes.FinantialDocumentPaymentCode playsRole paymentCodes{
            multiplicity *;
        }
    }

    relation MultipleEntriesPaymentCodeInvoiceEntry {
        document.InvoiceEntry playsRole invoiceEntries {
            multiplicity *;
        }
    
        paymentcodes.MultipleEntriesPaymentCode playsRole paymentCodes{
            multiplicity *;
        }
    }

    relation PaymentReferenceCodeTargetSettlementNote {
        paymentcodes.PaymentCodeTarget playsRole usedInTargetPayment {
            multiplicity *;
        }
    
        document.SettlementNote playsRole settlementNotes{
            multiplicity *;
        }
    }
	
	/* The relation with debt account is to pay when debts are deleted */
	relation PaymentReferenceCodeTargetDebtAccount {
		paymentcodes.PaymentCodeTarget playsRole paymentCodeTargets {
			multiplicity *;
		}
		
		debt.DebtAccount playsRole debtAccount {
			multiplicity 0..1;
		}
	}
	
class paymentcodes.pool.PaymentCodeGeneratorInstance {
	String name;
	String implementationClassName;
}

	relation PaymentCodeGeneratorInstanceDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
		
		paymentcodes.pool.PaymentCodeGeneratorInstance playsRole paymentCodeGeneratorInstances {
			multiplicity *;
		}
	}
	
	relation PaymentCodeGeneratorInstancePaymentCodePool {
		paymentcodes.pool.PaymentCodeGeneratorInstance playsRole paymentCodeGeneratorInstance {
			multiplicity 0..1;
		}
		
		paymentcodes.pool.PaymentCodePool playsRole paymentCodePools {
			multiplicity *;
		}
		
	}

class paymentcodes.SibsPaymentCodeTransaction extends payments.PaymentTransaction {
	String comments;
	DateTime sibsProcessingDate;
	String sibsEntityReferenceCode;
	String sibsPaymentReferenceCode;
	String sibsTransactionId;
}

class paymentcodes.SibsTransactionDetail  {
	String comments;
	DateTime whenProcessed;
	DateTime whenRegistered;
	BigDecimalT amountPayed;
	String sibsEntityReferenceCode;
	String sibsPaymentReferenceCode;
	String sibsTransactionId;
	String debtAccountId;
	String customerId;
	String businessIdentification;
	String fiscalNumber;
	String customerName; 
	String settlementDocumentNumber;
}
    
    	relation SibsTransactionDetailDomainRoot {
		    .pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		        multiplicity 0..1;
		    }
		
    		paymentcodes.SibsTransactionDetail playsRole sibsTransactionDetail {
				multiplicity *;
    		}
    	}

	class paymentcodes.SibsReportFile /* implements IGenericFile */ {
		String fileId;
		DateTime whenProcessedBySibs;
		BigDecimalT transactionsTotalAmount;
		BigDecimalT totalCost;
		String errorLog;
		String infoLog;
		DateTime creationDate;
		String creator;
	}
		
		relation SibsReportFileDomainRoot {
		    .pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		        multiplicity 1..1;
		    }
		
			paymentcodes.SibsReportFile playsRole sibsReportFiles {
				multiplicity *;
			}
		}
		
        relation SibsTransactionDetailSibsReportFile  {
            paymentcodes.SibsReportFile playsRole sibsReport {
                multiplicity 0..1;
            }
            
            paymentcodes.SibsTransactionDetail playsRole sibsTransactions {
            	multiplicity *;
            }
        }
	
		relation PaymentReferenceCodeSibsReportFile {
			paymentcodes.SibsReportFile playsRole reportedInFiles {
				multiplicity *;
			}
		   
			paymentcodes.PaymentReferenceCode playsRole referenceCodes {
				multiplicity *;
			}
		}
		
		relation SibsPaymentCodeTransactionSibsReportFile {
			paymentcodes.SibsReportFile playsRole sibsReportFile {
				multiplicity 0..1;
			}
			
			paymentcodes.SibsPaymentCodeTransaction playsRole sibsPaymentCodeTransactions {
				multiplicity *;
			}		   
		}

	class paymentcodes.SibsInputFile /* implements IGenericFile */ {
		String fileId;
		DateTime whenProcessedBySibs;
		String uploaderUsername;
		DateTime creationDate;
		String creator;
	}

		relation SibsInputFileFinantialInstitution {
			paymentcodes.SibsInputFile playsRole sibsInputFiles {
				multiplicity *;
			}
	      
			FinantialInstitution playsRole finantialInstitution {
				multiplicity 0..1;
			}
			
		}
	
	    relation SibsInputFileDomainRoot {
			paymentcodes.SibsInputFile playsRole sibsInputFiles {
			    multiplicity *;
			}
	      
			.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		        multiplicity 1..1;
			}
	    }
		
	class paymentcodes.SibsOutputFile /* implements IGenericFile */ {
		String fileId;
		String errorLog;
		String infoLog;
		String printedPaymentCodes;
		DateTime lastSuccessfulExportation;
		DateTime creationDate;
		String creator;
	}

		relation SibsOutputFileFinantialInstitution {
			paymentcodes.SibsOutputFile playsRole sibsOutputFiles {
				multiplicity *;
			}
			      
			FinantialInstitution playsRole finantialInstitution {
				multiplicity 0..1;
			}      
		}

		relation SibsOutputFileDomainRoot {
			paymentcodes.SibsOutputFile playsRole sibsOutputFiles {
				multiplicity *;
			}
			  
			.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		        multiplicity 1..1;
			}
		}

class integration.IntegrationOperation
{
	DateTime executionDate;
	boolean processed;
	boolean success;
	boolean corrected;
	String errorLog;
	String integrationLog;
	String soapInboundMessage;
	String soapOutboundMessage;
	String erpOperationId;
}
/* --- IntegrationOperation --- */


	relation IntegrationOperationFinantialInstitution {
	    FinantialInstitution playsRole finantialInstitution {
	        multiplicity 1..1;
	    }
	    
	    integration.IntegrationOperation playsRole integrationOperations {
	        multiplicity *;
	    }
	}

class integration.OperationFile /* implements IGenericFile */  {
	String fileId;
	DateTime creationDate;
	String creator;
}

	relation OperationFileDomainRoot {
	
		integration.OperationFile playsRole operationFiles {
			multiplicity *;
		}
					
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
	        multiplicity 1..1;
		}
	}

	relation IntegrationOperationOperationFile {
	    integration.OperationFile playsRole file {
	        multiplicity 0..1;

	    }

	    integration.IntegrationOperation playsRole integrationOperation {
	        multiplicity 0..1;
	    }
	}
	
	relation IntegrationOperationLogFile {
		integration.OperationFile playsRole logFile {
			multiplicity 0..1;
		}
		
		integration.IntegrationOperation playsRole logIntegrationOperation {
			multiplicity 0..1;
		}
	}


/* ERP Integration */
class integration.ERPConfiguration extends integration.Configuration
{
    String implementationClassName;
    boolean exportOnlyRelatedDocumentsPerExport;
    boolean exportAnnulledRelatedDocuments;
    Long maxSizeBytesToExportOnline;
    boolean integratedDocumentsExportationEnabled;
    String erpIdProcess;
    boolean creditsOfLegacyDebitWithoutLegacyInvoiceExportEnabled;
    boolean allowFiscalFixWithLegacyDocsExportedLegacyERP;
}

relation ERPConfigurationFinantialInstitution
{
    FinantialInstitution playsRole finantialInstitution {
        multiplicity 1..1;
    }
    
    integration.ERPConfiguration playsRole erpIntegrationConfiguration
    {
        multiplicity 0..1;
    }
}

relation ERPConfigurationSeries
{
    document.Series playsRole paymentsIntegrationSeries {
        multiplicity 0..1;
    }
    
    integration.ERPConfiguration playsRole erpIntegrationConfiguration
    {
        multiplicity 0..1;
    }
}

relation ConfigurationBennu {
    integration.Configuration playsRole configurations {
        multiplicity *;
    }
    
    .pt.ist.fenixframework.DomainRoot playsRole domainRoot {
        multiplicity 1..1;
    }
}


class integration.ERPExportOperation extends integration.IntegrationOperation
{
}

relation ERPExportOperationFinantialDocument {
    document.FinantialDocument playsRole finantialDocuments{
        multiplicity *;
    }
    
    integration.ERPExportOperation playsRole erpExportOperations {
        multiplicity *;
    }
}


class integration.ERPImportOperation extends integration.IntegrationOperation
{
    
}

relation ERPImportOperationFinantialDocument {
    document.FinantialDocument playsRole finantialDocuments{
        multiplicity *;
    }
    
    integration.ERPImportOperation playsRole erpImportOperations {
        multiplicity *;
    }
}

/*------------------
 * TREASURY SETTINGS
 * -----------------*/

class settings.TreasurySettings {
	boolean restrictPaymentMixingLegacyInvoices;
	String forwardPaymentReturnDefaultURL;
	
}

	relation TreasurySettingsBennu {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
		
		settings.TreasurySettings playsRole treasurySettings {
			multiplicity *;
		}
	}
	
	relation TreasurySettingsInterestProduct {
	    
	    settings.TreasurySettings playsRole treasurySettings {
	        multiplicity 0..1;
	    }
	    
	    Product playsRole interestProduct {
	        multiplicity 0..1;
	    }
	}
	
	relation TreasurySettingsAdvancePaymentProduct {
	    
	    settings.TreasurySettings playsRole advancePaymentTreasurySettings {
	        multiplicity 0..1;
	    }
	    
	    Product playsRole advancePaymentProduct {
	        multiplicity 0..1;
	    }
	}
	
	
	relation TreasurySettingsCurrency {
		
		settings.TreasurySettings playsRole treasurySettings {
			multiplicity 0..1;
		}
		
		Currency playsRole defaultCurrency {
			multiplicity 0..1;
		}
	}
	
	relation TreasurySettingsTransferBalanceProduct {
		settings.TreasurySettings playsRole transferBalanceTreasurySettings {
			multiplicity 0..1;
		}
		
	    Product playsRole transferBalanceProduct {
	        multiplicity 0..1;
	    }
	}
	
	relation TreasurySettingsCreditCardPaymentMethod {
		settings.TreasurySettings playsRole {
			multiplicity 0..1;
		}
		
		PaymentMethod playsRole creditCardPaymentMethod {
			multiplicity 0..1;
		}
	}
	
	relation TreasurySettingsMbWayPaymentMethod {
		settings.TreasurySettings playsRole {
			multiplicity 0..1;
		}
		
		PaymentMethod playsRole mbWayPaymentMethod {
			multiplicity 0..1;
		}
	}
	
	relation TreasurySettingsMbPaymentMethod {
		settings.TreasurySettings playsRole {
			multiplicity 0..1;
		}
		
		PaymentMethod playsRole mbPaymentMethod {
			multiplicity 0..1;
		}
	}
	
/*************
 * RELATIONS *
 *************/

/*-------------------
 * REFERENCE ENTITIES
 * ------------------*/

relation FinantialInstitutionFiscalCountryRegion{
	FiscalCountryRegion playsRole fiscalCountryRegion {
		multiplicity 1..1;
	}
	
	FinantialInstitution playsRole finantialInstitutions {
		multiplicity *;
	}
}

relation FinantialInstitutionCurrency{
	Currency playsRole currency {
		multiplicity 1..1;
	}
	
	FinantialInstitution playsRole finantialInstitutions {
		multiplicity *;
	}
}

relation FiscalCountryRegionBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	FiscalCountryRegion playsRole fiscalCountryRegions {
		multiplicity *;
	}
}

relation CustomerTypeBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	CustomerType playsRole customerTypes {
		multiplicity *;
	}
}

relation CustomerCustomerType {
    CustomerType playsRole customerType{
        multiplicity 0..1;
    }
    
    Customer playsRole customers {
        multiplicity *;
    }
}


relation VatTypeBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	VatType playsRole vatTypes {
		multiplicity *;
	}
}

relation VatBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	Vat playsRole vats {
		multiplicity *;
	}
}

relation VatVatType {
	VatType playsRole vatType {
		multiplicity 1..1;
	}
	
	Vat playsRole vats {
		multiplicity *;
	}
}

relation VatFinantialInstitution {
	FinantialInstitution playsRole finantialInstitution {
		multiplicity 1..1;
	}
	
	Vat playsRole vats {
		multiplicity *;
	}
}

relation VatExemptionReasonBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	VatExemptionReason playsRole vatExemptionReasons {
		multiplicity *;
	}
}

relation ProductVatExemptionReason {
	VatExemptionReason playsRole vatExemptionReason {
		multiplicity 0..1;
	}
	
	Product playsRole products {
		multiplicity *;
	}
}


relation ProductGroupBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	ProductGroup playsRole productGroups {
		multiplicity *;
	}
}

relation ProductBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	Product playsRole products {
		multiplicity *;
	}
}

relation ProductProductGroup {
	ProductGroup playsRole productGroup {
		multiplicity 1..1;
	}
	
	Product playsRole products {
		multiplicity *;
	}
}

relation CurrencyBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	Currency playsRole currencies {
		multiplicity *;
	}
}

relation PaymentMethodBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	PaymentMethod playsRole paymentMethods {
		multiplicity *;
	}
}

relation TreasuryOperationLogBennu {
    .pt.ist.fenixframework.DomainRoot playsRole domainRoot {
        multiplicity 1..1;
    }

    TreasuryOperationLog playsRole treasuryOperationLogs {
        multiplicity *;
    }
}

/*-----------
 * Finantial 
 * ----------*/

relation FinantialInstitutionBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	FinantialInstitution playsRole finantialInstitutions {
		multiplicity *;
	}
}

relation ProductFinantialInstitution {
	FinantialInstitution playsRole finantialInstitutions {
		multiplicity *;
	}
	
	Product playsRole availableProducts {
		multiplicity *;
	}
}

relation FinantialEntityBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	FinantialEntity playsRole finantialEntities {
		multiplicity *;
	}	
}

relation FinantialInstitutionFinantialEntity {
	FinantialInstitution playsRole finantialInstitution {
		multiplicity 1..1;
	}
	
	FinantialEntity playsRole finantialEntities {
		multiplicity *;
	}
}

relation CustomerBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	Customer playsRole customers {
		multiplicity *;
	}
}

relation DebtAccountBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	debt.DebtAccount playsRole debtAccounts {
		multiplicity *;
	}
}

relation DebtAccountCustomer {
	Customer playsRole customer {
		multiplicity 1..1;
	}
	
	debt.DebtAccount playsRole debtAccounts {
		multiplicity *;
	}
}

relation DebtAccountFinantialInstitution {
	FinantialInstitution playsRole finantialInstitution {
		multiplicity 1..1;
	}
	
	debt.DebtAccount playsRole debtAccounts {
		multiplicity *;
	}
}

/* --- Document Template --- */

relation TreasuryDocumentTemplateBennu {
    .pt.ist.fenixframework.DomainRoot playsRole domainRoot {
        multiplicity 1..1;
    }
    
    document.TreasuryDocumentTemplate playsRole treasuryDocumentTemplates {
        multiplicity *;
    }
}

relation TreasuryDocumentTemplateFinantialDocumentType {
    document.FinantialDocumentType playsRole finantialDocumentType {
        multiplicity 1..1;
    }

    document.TreasuryDocumentTemplate playsRole treasuryDocumentTemplates {
        multiplicity *;
    }
}

relation TreasuryDocumentTemplateFinantialEntity {
    FinantialEntity playsRole finantialEntity {
        multiplicity 1..1;
    }
    
    document.TreasuryDocumentTemplate playsRole treasuryDocumentTemplates {
        multiplicity *;
    }
}

/*-----------
 * Documents 
 * ----------*/

/* --- FinantialDocumentType --- */

relation FinantialDocumentTypeBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	document.FinantialDocumentType playsRole finantialDocumentTypes {
		multiplicity *;
	}
}

/* --- Series --- */

relation SeriesBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	document.Series playsRole series {
		multiplicity *;
	}
}

relation SeriesFinantialInstitution {
	FinantialInstitution playsRole finantialInstitution {
		multiplicity 1..1;
	}
	
	document.Series playsRole series {
		multiplicity *;
	}
}

/* --- DocumentNumberSeries --- */

relation DocumentNumberSeriesBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	document.DocumentNumberSeries playsRole documentNumberSeries {
		multiplicity *;
	}
}

relation DocumentNumberSeriesSeries {
	document.Series playsRole series {
		multiplicity 1..1;
	}

	document.DocumentNumberSeries playsRole documentNumberSeries {
		multiplicity *;
	}
}

relation DocumentNumberSeriesFinantialDocumentType {
	document.FinantialDocumentType playsRole finantialDocumentType {
		multiplicity 1..1;
	}
	
	document.DocumentNumberSeries playsRole documentNumberSeries {
		multiplicity *;
	}
}

/* --- TreasuryEvent --- */

relation TreasuryEventBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}

	event.TreasuryEvent playsRole treasuryEvents {
		multiplicity *;
	}
}

relation TreasuryEventProduct {
	Product playsRole product {
		multiplicity 1..1;
	}
	
	event.TreasuryEvent playsRole treasuryEvents {
		multiplicity *;
	}
}

relation TreasuryEventDebtAccount {
	
	debt.DebtAccount playsRole debtAccount {
		multiplicity 0..1;
	}
	
	event.TreasuryEvent playsRole treasuryEvents {
		multiplicity *;
	}
}

/* --- FinantialDocument --- */

relation FinantialDocumentBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}

	document.FinantialDocument playsRole finantialDocuments {
		multiplicity *;
	}
}

relation FinantialDocumentFinantialDocumentType {
	document.FinantialDocumentType playsRole finantialDocumentType {
		multiplicity 1..1;
	}
	
	document.FinantialDocument playsRole finantialDocuments {
		multiplicity *;
	}
}

relation FinantialDocumentDocumentNumberSeries {
	document.DocumentNumberSeries playsRole documentNumberSeries {
		multiplicity 1..1;
	}
	
	document.FinantialDocument playsRole finantialDocuments {
		multiplicity *;
	}
}

relation FinantialDocumentCurrency {
	Currency playsRole currency {
		multiplicity 1..1;
	}
	
	document.FinantialDocument playsRole finantialDocuments {
		multiplicity *;
	}
}

relation FinantialDocumentDebtAccount {
	debt.DebtAccount playsRole debtAccount {
		multiplicity 1..1;
	}
	
	document.FinantialDocument playsRole finantialDocuments {
		multiplicity *;
	}
}

/* --- Invoice --- */

relation InvoiceDebtAccount {
	debt.DebtAccount playsRole payorDebtAccount {
		multiplicity 0..1;
	}
	
	document.Invoice playsRole invoice {
		multiplicity *;
	}
}

/* --- CreditNote --- */

relation CreditNoteDebitNote {
	document.DebitNote playsRole debitNote {
		multiplicity 0..1;
	}
	
	document.CreditNote playsRole creditNote {
		multiplicity *;
	}
}

/* --- FinantialDocumentEntry --- */

relation FinantialDocumentEntryBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	document.FinantialDocumentEntry playsRole finantialDocumentEntries {
		multiplicity *;
	}
}

relation FinantialDocumentEntryFinantialDocument {
	document.FinantialDocument playsRole finantialDocument {
		multiplicity 0..1;
	}
	
	document.FinantialDocumentEntry playsRole finantialDocumentEntries {
		multiplicity *;
	}
}

/* --- InvoiceEntry --- */

relation InvoiceEntryDebtAccount {
	debt.DebtAccount playsRole debtAccount {
		multiplicity 1..1;
	}
	
	document.InvoiceEntry playsRole invoiceEntry {
		multiplicity *;
	}
}

relation InvoiceEntryCurrency {
	Currency playsRole currency {
		multiplicity 1..1;
	}
	
	document.InvoiceEntry playsRole invoiceEntry {
		multiplicity *;
	}
}

relation InvoiceEntryProduct {
	Product playsRole product {
		multiplicity 1..1;
	}
	
	document.InvoiceEntry playsRole invoiceEntries {
		multiplicity *;
	}
}

relation InvoiceEntryVat {
	Vat playsRole vat {
		multiplicity 1..1;
	}
	
	document.InvoiceEntry playsRole invoiceEntries {
		multiplicity *;
	}
}

/* --- DebitEntry --- */

relation DebitEntryTreasuryEvent {
	event.TreasuryEvent playsRole treasuryEvent {
		multiplicity 0..1;
	}
		
	document.DebitEntry playsRole debitEntries {
		multiplicity *;
	}
}

relation DebitEntryInterestRate {
    document.DebitEntry playsRole debitEntry {
        multiplicity 0..1;
    }
    
    tariff.InterestRate playsRole interestRate {
        multiplicity 0..1;
    }
}


/* - REMOVED WE DONT NEED THE TARIFF ROLE TO DEBIT_ENTRY
relation DebitEntryTariff {
    document.DebitEntry playsRole debitEntry {
        multiplicity *;
    }
    
    tariff.Tariff playsRole tariff {
        multiplicity 1..1;
    }
}
*/
relation DebitEntryInterestDebitEntry {
    document.DebitEntry playsRole debitEntry {
        multiplicity 0..1;
    }
    
    document.DebitEntry playsRole interestDebitEntries {
        multiplicity *;
    }
}

relation debitEntryTuitionPayorDebtAccount {
	.org.fenixedu.treasury.domain.debt.DebtAccount playsRole payorDebtAccount {
		multiplicity 0..1;
	}
	
	.org.fenixedu.treasury.domain.document.DebitEntry playsRole payorDebitEntries {
		multiplicity *;
	}
}
	

/* --- CreditEntry --- */

relation CreditEntryDebitEntry {
	document.DebitEntry playsRole debitEntry {
		multiplicity 0..1;
	}

	document.CreditEntry playsRole creditEntries {
		multiplicity *;
	}
}


/* --- SettlementEntry --- */

relation SettlementEntryInvoiceEntry {
	document.InvoiceEntry playsRole invoiceEntry {
		multiplicity 1..1;
	}
	
	document.SettlementEntry playsRole settlementEntries {
		multiplicity *;
	}
}

relation SettlementNoteAdvancedPaymentCreditNote{
    document.AdvancedPaymentCreditNote playsRole advancedPaymentCreditNote
    {
        multiplicity 0..1;
    }
    
    document.SettlementNote playsRole advancedPaymentSettlementNote
    {
        multiplicity 0..1;
    }
}

/* --- PaymentEntry --- */

relation PaymentEntryBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	document.PaymentEntry playsRole paymentEntries {
		multiplicity *;
	}
}

relation PaymentEntrySettlementNote {
	document.SettlementNote playsRole settlementNote {
		multiplicity 1..1;
	}

	document.PaymentEntry playsRole paymentEntries {
		multiplicity *;
	}
}

relation PaymentEntryPaymentMode {
	PaymentMethod playsRole paymentMethod {
		multiplicity 1..1;
	}
	
	document.PaymentEntry playsRole paymentEntries {
		multiplicity *;
	}
}


/* --- ReimbursementEntry --- */

relation ReimbursementEntryBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	document.ReimbursementEntry playsRole reimbursementEntries {
		multiplicity *;
	}
}

relation ReimbursementEntrySettlementNote {
	document.SettlementNote playsRole settlementNote {
		multiplicity 1..1;
	}

	document.ReimbursementEntry playsRole reimbursementEntries {
		multiplicity *;
	}
}

relation ReimbursementEntryPaymentMode {
    PaymentMethod playsRole paymentMethod {
        multiplicity 1..1;
    }
    
    document.ReimbursementEntry playsRole reimbursementEntries {
        multiplicity *;
    }
}

class document.reimbursement.ReimbursementProcessStatusType {
	String code;
	String description;
	boolean initialStatus;
	boolean finalStatus;
	int orderNumber;
	boolean rejectedStatus;
}

	relation ReimbursementProcessStatusTypeBennu {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
		
		document.reimbursement.ReimbursementProcessStatusType playsRole reimbursementProcessStatusTypes {
			multiplicity *;
		}
	}

	relation ReimbursementProcessStatusTypeSettlementNote {
		document.SettlementNote playsRole settlementNotes {
			multiplicity *;
		}
	
		document.reimbursement.ReimbursementProcessStatusType playsRole currentReimbursementProcessStatus {
			multiplicity 0..1;
		}
	}

class document.reimbursement.ReimbursementProcessStateLog {
	String erpProcessId;
	String statusId;
	DateTime statusDate;
	String remarks;
}

	relation ReimbursementProcessStateLogBennu {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
		
		document.reimbursement.ReimbursementProcessStateLog playsRole reimbursementProcessStateLogs {
			multiplicity *;
		}
	}
	
	relation ReimbursementProcessStateLogReimbursementProcessStatusType {
	
		document.reimbursement.ReimbursementProcessStatusType playsRole ReimbursementProcessStatusType {
			multiplicity 1..1;
		}
				
		document.reimbursement.ReimbursementProcessStateLog playsRole reimbursementProcessStateLogs {
			multiplicity *;
		}
	}

	relation ReimbursementProcessStateLogSettlementNote {
	
		document.SettlementNote playsRole settlementNote {
			multiplicity 1..1;
		}

		document.reimbursement.ReimbursementProcessStateLog playsRole reimbursementProcessStateLogs {
			multiplicity *;
		}
	}

relation FinantialDocumentPendingForExportationFinantialInstitution {
	document.FinantialDocument playsRole finantialDocumentsPendingForExportation {
		multiplicity *;
	}
	
	FinantialInstitution playsRole institutionForExportation {
        multiplicity 0..1;
    }
}

/* --- Tariff --- */

relation TariffBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	tariff.Tariff playsRole tariffs {
		multiplicity *;
	}
}

relation TariffProduct {
	Product playsRole product {
		multiplicity 1..1;
	}
	
	tariff.Tariff playsRole tariff {
		multiplicity *;
	}
}

relation ProductVatType {
	VatType playsRole vatType {
		multiplicity 0..1;
	}
	
	Product playsRole products{
		multiplicity *;
	}
}

relation TariffFinantialEntity {
	.org.fenixedu.treasury.domain.FinantialEntity playsRole finantialEntity {
		multiplicity 1..1;
	}
	
	tariff.Tariff playsRole tariff {
		multiplicity *;
	}
}

relation GlobalInterestRateBennu {
    .pt.ist.fenixframework.DomainRoot playsRole domainRoot {
        multiplicity 1..1;
    }
    
    tariff.GlobalInterestRate playsRole globalInterestRates {
        multiplicity *;
    }
}


/* --- InterestRate --- */

relation InterestRateBennu {
	.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
		multiplicity 1..1;
	}
	
	tariff.InterestRate playsRole interestRates {
		multiplicity *;
	}
}

relation InterestRateTariff {
	tariff.Tariff playsRole tariff {
		multiplicity 0..1;
	}
	
	tariff.InterestRate playsRole interestRate {
		multiplicity 0..1;
	}
}
	

/* ****************
 * FORWARD PAYMENTS
 * ****************
 */

class forwardpayments.implementations.TPAVirtualImplementation extends payments.integration.DigitalPaymentPlatform {
	String paymentURL;
	String virtualTPAMOXXURL;
	String virtualTPAMerchantId;
	String virtualTPAId;
	String virtualTPAKeyStoreName;
	String virtualTPACertificateAlias;
	String virtualTPACertificatePassword;
}

class forwardpayments.payline.PaylineConfiguration extends payments.integration.DigitalPaymentPlatform {
	String paymentURL;
	String paylineMerchantId;
	String paylineMerchantAccessKey;
	String paylineContractNumber;
}

class forwardpayments.ForwardPaymentConfiguration {
	boolean active;
	String name;
	String paymentURL;
	String returnURL;
	String virtualTPAMOXXURL;
	String virtualTPAMerchantId;
	String virtualTPAId;
	String virtualTPAKeyStoreName;
	String virtualTPACertificateAlias;
	String virtualTPACertificatePassword;
	String implementation;
	String paylineMerchantId;
	String paylineMerchantAccessKey;
	String paylineContractNumber;
	String reimbursementPolicyJspFile;
	String privacyPolicyJspFile;
	String logosJspPageFile;
	
}

	relation ForwardPaymentConfigurationBennu {
		forwardpayments.ForwardPaymentConfiguration playsRole forwardPaymentConfigurations {
			multiplicity *;
		}
		
		.pt.ist.fenixframework.DomainRoot  playsRole domainRoot {
			multiplicity 1..1;
		}
	}
	
	relation ForwardPaymentConfigurationFinantialInstitution {
		forwardpayments.ForwardPaymentConfiguration playsRole forwardPaymentConfigurations {
			multiplicity *;
		}
	
		FinantialInstitution playsRole finantialInstitution {
			multiplicity 1..1;
		}
	}
	
	relation ForwardPaymentConfigurationSeries {
		forwardpayments.ForwardPaymentConfiguration playsRole forwardPaymentConfigurations {
			multiplicity *;
		}
	
		document.Series playsRole series {
			multiplicity 1..1;
		}
	}
	
	relation ForwardPaymentConfigurationPaymentMethod {
		forwardpayments.ForwardPaymentConfiguration playsRole forwardPaymentConfigurations {
			multiplicity *;
		}
		
       PaymentMethod playsRole paymentMethod {
           multiplicity 1..1;
       }
	}

class forwardpayments.ForwardPaymentConfigurationFile /* implements IGenericFile */ {
	String fileId;
	DateTime creationDate;
	String creator;
}

	relation ForwardPaymentConfigurationFileDomainRoot {
       forwardpayments.ForwardPaymentConfigurationFile playsRole virtualTPACertificate {
           multiplicity *;
       }
		
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	}
	
	relation ForwardPaymentConfigurationVirtualTPACertificate {
		forwardpayments.ForwardPaymentConfiguration playsRole {
			multiplicity *;
		}
		
       forwardpayments.ForwardPaymentConfigurationFile playsRole virtualTPACertificate {
           multiplicity 0..1;
       }
	}

	relation TPAVirtualImplementationVirtualTPACertificate {
		forwardpayments.implementations.TPAVirtualImplementation playsRole {
			multiplicity *;
		}
		
       forwardpayments.ForwardPaymentConfigurationFile playsRole virtualTPACertificate {
           multiplicity 0..1;
       }
	}

class forwardpayments.ForwardPaymentRequest extends payments.PaymentRequest {
	long orderNumber;
	ForwardPaymentStateType state;
	String forwardPaymentSuccessUrl;
	String forwardPaymentInsuccessUrl;
	String returnForwardPaymentUrlChecksum;
	String paylineToken;
	String paylineRedirectUrl;
	String sibsGatewayCheckoutId;
}

class forwardpayments.ForwardPayment {
	ForwardPaymentStateType currentState;
	String rejectionCode;
	String rejectionLog;
	DateTime whenOccured;
	BigDecimalT amount;
	BigDecimalT payedAmount;
	String transactionId;
	DateTime transactionDate;
	String authorizationId;
	DateTime authorizationDate;
	String forwardPaymentSuccessUrl;
	String forwardPaymentInsuccessUrl;
	String returnForwardPaymentUrlChecksum;
	long orderNumber;
	String paylineToken;
	String paylineRedirectUrl;
	String justification;
	String sibsCheckoutId;
	String sibsTransactionId;
	String sibsMerchantTransactionId;
}

	relation ForwardPaymentBennu {
		.pt.ist.fenixframework.DomainRoot  playsRole domainRoot {
			multiplicity 1..1;
		}

		forwardpayments.ForwardPayment playsRole forwardPayments {
			multiplicity *;
		}
	}
	
	relation ForwardPaymentDebtAccount {
		debt.DebtAccount playsRole debtAccount {
			multiplicity 1..1;
		}

		forwardpayments.ForwardPayment playsRole forwardPayments {
			multiplicity *;
		}
	}
	
	relation ForwardPaymentDebitEntries {
		forwardpayments.ForwardPayment playsRole forwardPayments {
			multiplicity *;
		}
		
		document.DebitEntry playsRole debitEntries {
			multiplicity *;
		}
	}
	
	relation ForwardPaymentForwardPaymentConfiguration {
		forwardpayments.ForwardPaymentConfiguration playsRole forwardPaymentConfiguration {
			multiplicity 1..1;
		}
	
		forwardpayments.ForwardPayment playsRole forwardPayments {
			multiplicity *;
		}
	}
	
	relation ForwardPaymentSettlementNote {
		forwardpayments.ForwardPayment playsRole forwardPayment {
			multiplicity 0..1;
		}
		
        document.SettlementNote playsRole settlementNote {
            multiplicity 0..1;
        }
	}

class forwardpayments.ForwardPaymentLog {
	int orderNumber;
	ForwardPaymentStateType type;
	DateTime whenOccured;
	String statusCode;
	String statusLog;
	boolean exceptionOccured;
}

	relation ForwardPaymentLogBennu {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}

		forwardpayments.ForwardPaymentLog playsRole forwardPaymentLogs {
			multiplicity *;
		}
	}
	
	relation ForwardPaymentLogForwardPayment {
		forwardpayments.ForwardPayment playsRole forwardPayment {
			multiplicity 1..1;
		}
		
		forwardpayments.ForwardPaymentLog playsRole forwardPaymentLogs {
			multiplicity *;
		}
	}
	
class forwardpayments.ForwardPaymentLogFile /* implements IGenericFile */ {
	String fileId;
	DateTime creationDate;
	String creator;
}
	
	relation ForwardPaymentLogFileDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}

		forwardpayments.ForwardPaymentLogFile playsRole forwardPaymentLogFiles {
			multiplicity *;
		}
	}

	relation ForwardPaymentLogRequestLogFile {
		forwardpayments.ForwardPaymentLog playsRole forwardPaymentLogsForRequest {
			multiplicity 0..1;
		}
	
		forwardpayments.ForwardPaymentLogFile playsRole requestLogFile {
			multiplicity 0..1;
		}
	}
	
	relation ForwardPaymentLogResponseLogFile {

		forwardpayments.ForwardPaymentLog playsRole forwardPaymentLogsForResponse {
			multiplicity 0..1;
		}
	
		forwardpayments.ForwardPaymentLogFile playsRole responseLogFile {
			multiplicity 0..1;
		}
	}
	
	relation ForwardPaymentLogExceptionLogFile {
		forwardpayments.ForwardPaymentLog playsRole forwardPaymentLogsForException {
			multiplicity 0..1;
		}
	
		forwardpayments.ForwardPaymentLogFile playsRole exceptionLogFile {
			multiplicity 0..1;
		}
	}

class forwardpayments.PostForwardPaymentsReportFile /* implements IGenericFile */ {
	String fileId;
	DateTime postForwardPaymentsExecutionDate;
	DateTime beginDate;
	DateTime endDate;
	DateTime creationDate;
	String creator;
}

	relation PostForwardPaymentsReportFileDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}

		forwardpayments.PostForwardPaymentsReportFile playsRole postForwardPaymentsReportFiles {
			multiplicity *;
		}
	}

class FiscalYear {
	int year;
	LocalDate settlementAnnulmentLimitDate;
}

	relation FiscalYearDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		FiscalYear playsRole fiscalYears {
			multiplicity *;
		}
	}
	
	relation FiscalYearFinantialInstitution {
		
		FinantialInstitution playsRole finantialInstitution {
			multiplicity 1..1;
		}
			
		FiscalYear playsRole fiscalYears {
			multiplicity *;
		}
	}
	

/* 
 * *************************
 * SibsOnlinePaymentsGateway
 * *************************	
 */
 
class sibspaymentsgateway.integration.SibsPaymentsGateway extends payments.integration.DigitalPaymentPlatform {
	String sibsEntityId;
	String sibsEndpointUrl;
	String bearerToken;
	String aesKey;
	String entityReferenceCode;
	SibsOnlinePaymentsGatewayEnviromentMode enviromentMode;
	int numberOfMonthsToExpirePaymentReferenceCode;
	boolean sendBillingDataInOnlinePayment;
}

class sibsonlinepaymentsgateway.SibsOnlinePaymentsGateway {
	String sibsEntityId;
	String sibsEndpointUrl;
	String bearerToken;
	String aesKey;
	String merchantTransactionIdPrefix;
	long merchantTransactionIdCounter;
	SibsOnlinePaymentsGatewayEnviromentMode enviromentMode;
	Boolean mbwayActive;
	int numberOfMonthsToExpirePaymentReferenceCode;
	boolean sendBillingDataInOnlinePayment;
}

	relation SibsOnlinePaymentsGatewayDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		sibsonlinepaymentsgateway.SibsOnlinePaymentsGateway playsRole sibsOnlinePaymentsGateway {
			multiplicity *;
		}
	}

	relation SibsOnlinePaymentsGatewayPaymentCodePool {
		paymentcodes.pool.PaymentCodePool playsRole paymentCodePool {
			multiplicity 1..1;
		}
		
		sibsonlinepaymentsgateway.SibsOnlinePaymentsGateway playsRole sibsOnlinePaymentsGateway {
			multiplicity 0..1;
		}
	}

	relation SibsOnlinePaymentsGateway {
		forwardpayments.ForwardPaymentConfiguration playsRole forwardPaymentConfiguration {
			multiplicity 0..1;
		}
		
		sibsonlinepaymentsgateway.SibsOnlinePaymentsGateway playsRole sibsOnlinePaymentsGateway {
			multiplicity 0..1;
		}
	}
	
	relation SibsOnlinePaymentsGatewayMbwayPaymentMethod {
		sibsonlinepaymentsgateway.SibsOnlinePaymentsGateway playsRole {
			multiplicity *;
		}
	
		PaymentMethod playsRole mbwayPaymentMethod {
			multiplicity 1..1;
		}
	}

	relation SibsOnlinePaymentsGatewayMbwayDocumentNumberSeries {
		sibsonlinepaymentsgateway.SibsOnlinePaymentsGateway playsRole {
			multiplicity *;
		}
	
		document.DocumentNumberSeries playsRole mbwayDocumentSeries {
			multiplicity 1..1;
		}
	}
	
class sibspaymentsgateway.SibsPaymentsGatewayLog extends payments.PaymentRequestLog {
	
	String sibsGatewayMerchantTransactionId;
	String sibsGatewayTransactionId;
	String sibsGatewayReferenceId;
	String paymentCode;
	String referenceId;
	
	String paymentType;
	String paymentBrand;
	
	BigDecimalT amount;
	DateTime paymentDate;

	DateTime requestSendDate;
	DateTime requestReceiveDate;
	
	String notificationInitializationVector;
	String notificationAuthTag;
	String notificationEncryptedPayloadFileId;
	
	boolean sibsTransactionDuplicated;
}

class sibsonlinepaymentsgateway.SibsOnlinePaymentsGatewayLog {
	String operationCode;
	DateTime creationDate;
	String responsibleUsername;
	
	String merchantTransactionId;
	String transactionId;
	String paymentCode;
	String referenceId;
	
	String paymentType;
	String paymentBrand;

	BigDecimalT amount;
	DateTime paymentDate;

	String customerFiscalNumber;
	String customerName;
	String customerBusinessIdentification;

	DateTime requestSendDate;
	DateTime requestReceiveDate;
	
	String requestPayloadFileId;
	String responsePayloadFileId;

	boolean exceptionOccured;
	String exceptionLogFileId;
	
	boolean operationSuccess;
	boolean transactionPaid;
	
	String operationResultCode;
	String operationResultDescription;
	
	String notificationInitializationVector;
	String notificationAuthTag;
	String notificationEncryptedPayloadFileId;
	
	boolean sibsTransactionDuplicated;
	String settlementNoteNumbers;
}

	relation SibsOnlinePaymentsGatewayLogDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		sibsonlinepaymentsgateway.SibsOnlinePaymentsGatewayLog playsRole sibsOnlinePaymentsGatewayLogs {
			multiplicity *;
		}
	}

	relation SibsOnlinePaymentsGatewayLogGateway {
		sibsonlinepaymentsgateway.SibsOnlinePaymentsGateway playsRole sibsOnlinePaymentsGateway {
			multiplicity 0..1;
		}
	
		sibsonlinepaymentsgateway.SibsOnlinePaymentsGatewayLog playsRole sibsOnlinePaymentsGatewayLogs {
			multiplicity *;
		}
	}

	relation SibsOnlinePaymentsGatewayLogDebtAccount {
		debt.DebtAccount playsRole debtAccount {
			multiplicity 0..1;
		}
	
		sibsonlinepaymentsgateway.SibsOnlinePaymentsGatewayLog playsRole sibsOnlinePaymentsGatewayLogs {
			multiplicity *;
		}
	}
//Deprecated
class sibsonlinepaymentsgateway.MbwayPaymentRequest {
	DateTime creationDate;
	String phoneNumber;
	String sibsMerchantTransactionId;
	String sibsReferenceId;
	PaymentReferenceCodeStateType state;
	BigDecimalT payableAmount;
}
	
	relation MbwayPaymentRequestDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		sibsonlinepaymentsgateway.MbwayPaymentRequest playsRole mbwayPaymentRequests {
			multiplicity *;
		}
	}
	
	relation MbwayPaymentRequestDebtAccount {
		debt.DebtAccount playsRole debtAccount {
			multiplicity 1..1;
		}
	
		sibsonlinepaymentsgateway.MbwayPaymentRequest playsRole mbwayPaymentRequests {
			multiplicity *;
		}
	}

    relation MbwayPaymentRequestInvoiceEntry {
        document.InvoiceEntry playsRole invoiceEntries {
            multiplicity *;
        }
    
		sibsonlinepaymentsgateway.MbwayPaymentRequest playsRole mbwayPaymentRequests {
			multiplicity *;
		}
    }
    
    relation MbwayPaymentRequestSibsOnlinePaymentsGateway {
    	sibsonlinepaymentsgateway.SibsOnlinePaymentsGateway playsRole sibsOnlinePaymentsGateway {
    		multiplicity 1..1;
    	}
    
		sibsonlinepaymentsgateway.MbwayPaymentRequest playsRole mbwayPaymentRequests {
			multiplicity *;
		}
    }
// Deprecated
class sibsonlinepaymentsgateway.MbwayTransaction {
	DateTime creationDate;
	DateTime paymentDate;
	String sibsTransactionId;
	BigDecimalT amount;
}
	
	relation MbwayPaymentTransactionDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		sibsonlinepaymentsgateway.MbwayTransaction playsRole mbwayPaymentTransactions {
			multiplicity *;
		}
	}
	
	relation MbwayTransactionMbwayPaymentRequest {
		sibsonlinepaymentsgateway.MbwayPaymentRequest playsRole mbwayPaymentRequest {
			multiplicity 1..1;
		}
		
		sibsonlinepaymentsgateway.MbwayTransaction playsRole mbwayTransactions {
			multiplicity *;
		}
	}

	relation MbwayPaymentTransactionSettlementNote {
		sibsonlinepaymentsgateway.MbwayTransaction playsRole mbwayPaymentTransaction {
			multiplicity 0..1;
		}
		
        document.SettlementNote playsRole settlementNotes {
            multiplicity *;
        }
	}
	
class sibspaymentsgateway.MbwayRequest extends payments.PaymentRequest {
	String phoneNumber;
	PaymentReferenceCodeStateType state;
}
	
//*********************************************
//PaymentPlan
//*********************************************
class paymentPlan.PaymentPlan{
	String paymentPlanId;
	LocalDate creationDate;
	String reason;
	PaymentPlanStateType state;
	String stateReason;
	String propertiesJsonMap;
}
	relation PaymentPlanDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		paymentPlan.PaymentPlan playsRole paymentPlans {
			multiplicity *;
		}
	}
	
	relation PaymentPlanDebtaccount{
		paymentPlan.PaymentPlan playsRole paymentPlans {
			multiplicity *;
		}
		
		debt.DebtAccount playsRole debtAccount {
			multiplicity 0..1;
		}
	}
	
	relation PaymentPlanEmolumentDebitEntry{
		paymentPlan.PaymentPlan playsRole emolumentPaymentPlan {
			multiplicity 0..1;
		}
		
		document.DebitEntry playsRole emolument {
			multiplicity 0..1;
		}
	}
	relation PaymentPlanPaymentPlanRevision{
		paymentPlan.PaymentPlan playsRole paymentPlanOriginal {
			multiplicity 0..1;
		}
		
		paymentPlan.PaymentPlan playsRole paymentPlanRevisions {
			multiplicity *;
		}
	}


class paymentPlan.Installment {
	LocalizedString description;
	LocalDate dueDate;
	String propertiesJsonMap;
}

	relation InstallmentDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		paymentPlan.Installment playsRole installments {
			multiplicity *;
		}
	}
	
	relation PaymentPlanInstallment{
		paymentPlan.PaymentPlan playsRole paymentPlan {
			multiplicity 0..1;
		}
		
		paymentPlan.Installment playsRole installments {
			multiplicity *;
		}
	}
	
	//Deprecated
	relation MultipleEntriesPaymentCodeInstallment {
        paymentPlan.Installment playsRole installments {
            multiplicity *;
        }
    
        paymentcodes.MultipleEntriesPaymentCode playsRole paymentCodes{
            multiplicity *;
        }
    }
    
    //Deprecated
	relation ForwardPaymentInstallments {
		forwardpayments.ForwardPayment playsRole forwardPayments {
			multiplicity *;
		}
		
		paymentPlan.Installment playsRole installments {
            multiplicity *;
        }
	}
    
	relation MbwayPaymentRequestInstallment {
        paymentPlan.Installment playsRole installments {
            multiplicity *;
        }
    
        sibsonlinepaymentsgateway.MbwayPaymentRequest playsRole mbwayPaymentRequests {
            multiplicity *;
        }
    }
	
	relation PaymentRequestInstallments {
		payments.PaymentRequest playsRole paymentRequests {
			multiplicity *;
		}
		
		paymentPlan.Installment playsRole installments {
            multiplicity *;
        }	
	}
class paymentPlan.InstallmentEntry{
	BigDecimalT amount;
}	
	relation InstallmentEntryDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		paymentPlan.InstallmentEntry playsRole installmentEntries {
			multiplicity *;
		}
	}
	
	relation InstallmentEntryDebitEntry{
		paymentPlan.InstallmentEntry playsRole installmentEntry {
			multiplicity *;
		}
		
		document.DebitEntry playsRole debitEntry {
			multiplicity 0..1;
		}
	}
	
	relation InstallmentInstallmentEntry{
		paymentPlan.Installment playsRole installment {
			multiplicity 0..1;
		}
		
		paymentPlan.InstallmentEntry playsRole installmentEntries {
			multiplicity *;
		}
	}
	
	
	
class paymentPlan.InstallmentSettlementEntry{
	BigDecimalT amount;
}	
	relation InstallmentSettlementEntryDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		paymentPlan.InstallmentSettlementEntry playsRole installmentSettlementEntries {
			multiplicity *;
		}
	}
	
	relation InstallmentSettlementEntrySettlementEntry{
		document.SettlementEntry playsRole settlementEntry {
			multiplicity 1..1;
		}
		
		paymentPlan.InstallmentSettlementEntry playsRole installmentSettlementEntries {
			multiplicity *;
		}
	}
	
	relation InstallmentSettlementEntryInstallmentEntry{
		paymentPlan.InstallmentEntry playsRole installmentEntry {
			multiplicity 1..1;
		}
		
		paymentPlan.InstallmentSettlementEntry playsRole installmentSettlementEntries {
			multiplicity *;
		}
	}

class paymentPlan.PaymentPlanSettings{
	Boolean active;
	LocalizedString installmentDescriptionFormat;
	Boolean interestCalculationOfDebitsInPlans;
	Integer numberOfPaymentPlansActives;
}	
	relation PaymentPlanSettingsDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		paymentPlan.PaymentPlanSettings playsRole paymentPlanSettings {
			multiplicity *;
		}
	}
	
	relation PaymentPlanSettingsTreasurySettings {
		settings.TreasurySettings playsRole treasurySettings {
			multiplicity 1..1;
		}
	
		paymentPlan.PaymentPlanSettings playsRole paymentPlanSettings {
			multiplicity *;
		}
	}
	
	relation PaymentPlanSettingsProduct {
		Product playsRole emolumentProduct {
			multiplicity 0..1;
		}
	
		paymentPlan.PaymentPlanSettings playsRole paymentPlanSettings {
			multiplicity 0..1;
		}
	}
	
	//Deprecated
	relation PaymentCodePoolPaymentPlanSettings {
		paymentcodes.pool.PaymentCodePool playsRole paymentCodePool { 
			multiplicity 0..1; 
		}
		
		paymentPlan.PaymentPlanSettings playsRole paymentPlanSettings { 
			multiplicity *; 
		}
	}
		
	relation DigitalPaymentPlatformPaymentPlanSettings {
		payments.integration.DigitalPaymentPlatform playsRole digitalPaymentPlatform { 
			multiplicity 0..1; 
		}
		
		paymentPlan.PaymentPlanSettings playsRole paymentPlanSettings { 
			multiplicity *; 
		}
	}
	
	
class paymentPlan.PaymentPlanNumberGenerator {
	LocalizedString name;
	String prefix;
	Integer initialValue;
	Integer actualValue;
}

	relation PaymentPlanNumberGeneratorRootDomainObject {
		 paymentPlan.PaymentPlanNumberGenerator playsRole paymentPlanNumberGenerators {
		 	 multiplicity *; 
		}
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot { 
			multiplicity 1..1; 
		}
	}
	
	relation PaymentPlanNumberGeneratorPaymentPlanSettings {
		paymentPlan.PaymentPlanNumberGenerator playsRole numberGenerators { 
			multiplicity 0..1; 
		}
		
		paymentPlan.PaymentPlanSettings playsRole paymentPlanSettings { 
			multiplicity *; 
		}
	}

class paymentPlan.paymentPlanValidator.PaymentPlanValidator{
}
	relation PaymentPlanValidatorDomainRoot {
		.pt.ist.fenixframework.DomainRoot playsRole domainRoot {
			multiplicity 1..1;
		}
	
		paymentPlan.paymentPlanValidator.PaymentPlanValidator playsRole paymentPlanValidators {
			multiplicity *;
		}
	}
	
	relation PaymentPlanValidatorPaymentPlan{
		paymentPlan.PaymentPlan playsRole paymentPlans {
			multiplicity *;
		}
		
		paymentPlan.paymentPlanValidator.PaymentPlanValidator playsRole paymentPlanValidators {
			multiplicity *;
		}
	}

class paymentPlan.paymentPlanValidator.PaymentPlanGroupValidator extends paymentPlan.paymentPlanValidator.PaymentPlanValidator{
	LocalizedString name;
	Boolean active;
	Boolean conjunction;
}
	relation PaymentPlanGroupValidatorPaymentPlanValidator{
		paymentPlan.paymentPlanValidator.PaymentPlanGroupValidator playsRole parentValidator {
			multiplicity 0..1;
		}
		
		paymentPlan.paymentPlanValidator.PaymentPlanValidator playsRole childValidators {
			multiplicity *;
		}
	}
class paymentPlan.paymentPlanValidator.WithoutNonConsecutiveInstallmentsOverdueValidator extends paymentPlan.paymentPlanValidator.PaymentPlanValidator{
	Integer numberDaysToTakeEffect;
	Integer numberInstallments;
}

class paymentPlan.paymentPlanValidator.WithoutConsecutiveInstallmentsOverdueValidator extends paymentPlan.paymentPlanValidator.PaymentPlanValidator{
	Integer numberDaysToTakeEffect;
	Integer numberInstallments;
}

